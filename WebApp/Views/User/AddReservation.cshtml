@using Data.Models
@model SeatReservation
@{

}

<h1>@ViewBag.Film</h1>
<h3>Available seats: @ViewBag.seatsLeft</h3>

<div>
    <form method="post" asp-action="AddReservation">
        <input type="hidden" asp-for="ShowTimeId" /> 
        <div class="form-group">
            <label>Sector</label>
            <select id="sectorSelect" name="sector" class="form-control">
                @foreach (var sector in ViewBag.Sectors as List<string>)
                {
                    <option value="@sector">@sector</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label>Seat</label>
            <select id="seatSelect" name="seat" class="form-control">
                
            </select>
        </div>

        <div class="form-group">
            <label>Ticket type</label>
            <select id="ticketSelect" name="ticket" class="form-control">
                @foreach (var ticket in ViewBag.Tickets as Dictionary<string,double>)
                {
                    <option value="@ticket.Key">@ticket.Key - $@ticket.Value</option>
                }
            </select>
            <span class="text-info">
                Includes kids up to 12 years of age
            </span>
            <span class="text-info">
                If you are entitled to a discount, you must show your ID before entering the film
            </span>
        </div>
        <span class="text-danger">@ViewBag.ErrorMessage</span>
        <button type="submit" class="btn btn-primary">Reserve</button>
    </form>
</div>

<script>
    const occupiedSeatsBySector = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Occup));

    document.getElementById('sectorSelect').addEventListener('change', function () {
        const selectedSector = this.value;
        const seatSelect = document.getElementById('seatSelect');

        // Clear previous options
        seatSelect.innerHTML = '';

        // Get available seats for the selected sector
        const seats = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Seats));
        const occupiedSeats = occupiedSeatsBySector[selectedSector] || [];

        seats.forEach(seat => {
            const option = document.createElement('option');
            option.value = seat;
            option.textContent = seat;

            // Disable option if the seat is occupied
            if (occupiedSeats.includes(seat)) {
                option.disabled = true;
            }

            seatSelect.appendChild(option);
        });
    });

    // Trigger change event on page load to initialize seat options
    document.getElementById('sectorSelect').dispatchEvent(new Event('change'));
</script>